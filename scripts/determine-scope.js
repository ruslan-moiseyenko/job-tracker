const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const getChangedFiles = () => {
  try {
    const output = execSync('git diff --cached --name-only').toString();
    return output.split('\n').filter(Boolean);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:', error);
    return [];
  }
};

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±–ª–∞—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—É—Ç–∏ —Ñ–∞–π–ª–∞
const determineScopeFromPath = (filePath) => {
  const pathSegments = filePath.split(path.sep);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
  if (pathSegments[0] === 'apps') {
    if (pathSegments[1] === 'server') return 'server';
    if (pathSegments[1] === 'web') return 'web';
    if (pathSegments[1] === 'pwa') return 'pwa';
    if (pathSegments[1] === 'chrome-ext') return 'chrome-ext';
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  if (pathSegments[0] === 'packages' || pathSegments[0] === 'libs') return 'shared';
  if (pathSegments[0] === 'docs') return 'docs';
  if (filePath.includes('package.json') || filePath.includes('pnpm-lock.yaml')) return 'config';

  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return 'repo';
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
const main = () => {
  const changedFiles = getChangedFiles();

  if (changedFiles.length === 0) {
    console.log('–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞');
    return;
  }

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —á–∞—Å—Ç–æ—Ç—É –æ–±–ª–∞—Å—Ç–µ–π
  const scopeCounts = {};
  changedFiles.forEach(file => {
    const scope = determineScopeFromPath(file);
    scopeCounts[scope] = (scopeCounts[scope] || 0) + 1;
  });

  // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—É—é –æ–±–ª–∞—Å—Ç—å
  let mainScope = 'repo';
  let maxCount = 0;

  for (const [scope, count] of Object.entries(scopeCounts)) {
    if (count > maxCount) {
      maxCount = count;
      mainScope = scope;
    }
  }

  console.log(`\nüìå –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å –∫–æ–º–º–∏—Ç–∞: ${mainScope}`);
  console.log(`   (–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ ${changedFiles.length} —Ñ–∞–π–ª–æ–≤)`);
  console.log(`   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: "feat(${mainScope}): –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"\n`);
};

// –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main();